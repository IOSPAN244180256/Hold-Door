// Code generated by protoc-gen-go. DO NOT EDIT.
// source: openhttplog.proto

package GrpcOpenHttpLogPkg

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcDecimal struct {
	// Whole units part of the amount
	Units int64 `protobuf:"varint,1,opt,name=units,proto3" json:"units,omitempty"`
	// Nano units of the amount (10^-9)
	// Must be same sign as units
	Nanos                int32    `protobuf:"fixed32,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GrpcDecimal) Reset()         { *m = GrpcDecimal{} }
func (m *GrpcDecimal) String() string { return proto.CompactTextString(m) }
func (*GrpcDecimal) ProtoMessage()    {}
func (*GrpcDecimal) Descriptor() ([]byte, []int) {
	return fileDescriptor_27580e2d3c25b33d, []int{0}
}

func (m *GrpcDecimal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcDecimal.Unmarshal(m, b)
}
func (m *GrpcDecimal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcDecimal.Marshal(b, m, deterministic)
}
func (m *GrpcDecimal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcDecimal.Merge(m, src)
}
func (m *GrpcDecimal) XXX_Size() int {
	return xxx_messageInfo_GrpcDecimal.Size(m)
}
func (m *GrpcDecimal) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcDecimal.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcDecimal proto.InternalMessageInfo

func (m *GrpcDecimal) GetUnits() int64 {
	if m != nil {
		return m.Units
	}
	return 0
}

func (m *GrpcDecimal) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type GrpcOpenHttpLogObject struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PartnerID            string               `protobuf:"bytes,2,opt,name=PartnerID,proto3" json:"PartnerID,omitempty"`
	InterfaceName        string               `protobuf:"bytes,3,opt,name=InterfaceName,proto3" json:"InterfaceName,omitempty"`
	OperationTime        *timestamp.Timestamp `protobuf:"bytes,4,opt,name=OperationTime,proto3" json:"OperationTime,omitempty"`
	ActionTypes          string               `protobuf:"bytes,5,opt,name=ActionTypes,proto3" json:"ActionTypes,omitempty"`
	ActionGuid           string               `protobuf:"bytes,6,opt,name=ActionGuid,proto3" json:"ActionGuid,omitempty"`
	PushUrl              string               `protobuf:"bytes,7,opt,name=PushUrl,proto3" json:"PushUrl,omitempty"`
	OnlyCode             string               `protobuf:"bytes,8,opt,name=OnlyCode,proto3" json:"OnlyCode,omitempty"`
	BodyText             string               `protobuf:"bytes,9,opt,name=BodyText,proto3" json:"BodyText,omitempty"`
	ErrorMessage         string               `protobuf:"bytes,10,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	IP                   string               `protobuf:"bytes,11,opt,name=IP,proto3" json:"IP,omitempty"`
	Millisecond          *GrpcDecimal         `protobuf:"bytes,12,opt,name=Millisecond,proto3" json:"Millisecond,omitempty"`
	ComputerName         string               `protobuf:"bytes,13,opt,name=ComputerName,proto3" json:"ComputerName,omitempty"`
	FromIP               string               `protobuf:"bytes,14,opt,name=FromIP,proto3" json:"FromIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GrpcOpenHttpLogObject) Reset()         { *m = GrpcOpenHttpLogObject{} }
func (m *GrpcOpenHttpLogObject) String() string { return proto.CompactTextString(m) }
func (*GrpcOpenHttpLogObject) ProtoMessage()    {}
func (*GrpcOpenHttpLogObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_27580e2d3c25b33d, []int{1}
}

func (m *GrpcOpenHttpLogObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcOpenHttpLogObject.Unmarshal(m, b)
}
func (m *GrpcOpenHttpLogObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcOpenHttpLogObject.Marshal(b, m, deterministic)
}
func (m *GrpcOpenHttpLogObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcOpenHttpLogObject.Merge(m, src)
}
func (m *GrpcOpenHttpLogObject) XXX_Size() int {
	return xxx_messageInfo_GrpcOpenHttpLogObject.Size(m)
}
func (m *GrpcOpenHttpLogObject) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcOpenHttpLogObject.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcOpenHttpLogObject proto.InternalMessageInfo

func (m *GrpcOpenHttpLogObject) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *GrpcOpenHttpLogObject) GetPartnerID() string {
	if m != nil {
		return m.PartnerID
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetOperationTime() *timestamp.Timestamp {
	if m != nil {
		return m.OperationTime
	}
	return nil
}

func (m *GrpcOpenHttpLogObject) GetActionTypes() string {
	if m != nil {
		return m.ActionTypes
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetActionGuid() string {
	if m != nil {
		return m.ActionGuid
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetPushUrl() string {
	if m != nil {
		return m.PushUrl
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetOnlyCode() string {
	if m != nil {
		return m.OnlyCode
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetBodyText() string {
	if m != nil {
		return m.BodyText
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetMillisecond() *GrpcDecimal {
	if m != nil {
		return m.Millisecond
	}
	return nil
}

func (m *GrpcOpenHttpLogObject) GetComputerName() string {
	if m != nil {
		return m.ComputerName
	}
	return ""
}

func (m *GrpcOpenHttpLogObject) GetFromIP() string {
	if m != nil {
		return m.FromIP
	}
	return ""
}

type GrpcOpenHttpLogSel struct {
	ID                   int64                `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PartnerID            string               `protobuf:"bytes,2,opt,name=PartnerID,proto3" json:"PartnerID,omitempty"`
	InterfaceName        string               `protobuf:"bytes,3,opt,name=InterfaceName,proto3" json:"InterfaceName,omitempty"`
	OperationTime        *timestamp.Timestamp `protobuf:"bytes,4,opt,name=OperationTime,proto3" json:"OperationTime,omitempty"`
	ActionTypes          string               `protobuf:"bytes,5,opt,name=ActionTypes,proto3" json:"ActionTypes,omitempty"`
	ActionGuid           string               `protobuf:"bytes,6,opt,name=ActionGuid,proto3" json:"ActionGuid,omitempty"`
	PushUrl              string               `protobuf:"bytes,7,opt,name=PushUrl,proto3" json:"PushUrl,omitempty"`
	OnlyCode             string               `protobuf:"bytes,8,opt,name=OnlyCode,proto3" json:"OnlyCode,omitempty"`
	BodyText             string               `protobuf:"bytes,9,opt,name=BodyText,proto3" json:"BodyText,omitempty"`
	ErrorMessage         string               `protobuf:"bytes,10,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
	IP                   string               `protobuf:"bytes,11,opt,name=IP,proto3" json:"IP,omitempty"`
	Millisecond          *GrpcDecimal         `protobuf:"bytes,12,opt,name=Millisecond,proto3" json:"Millisecond,omitempty"`
	ComputerName         string               `protobuf:"bytes,13,opt,name=ComputerName,proto3" json:"ComputerName,omitempty"`
	FromIP               string               `protobuf:"bytes,14,opt,name=FromIP,proto3" json:"FromIP,omitempty"`
	Page                 int32                `protobuf:"varint,15,opt,name=page,proto3" json:"page,omitempty"`
	Pagecount            int32                `protobuf:"varint,16,opt,name=pagecount,proto3" json:"pagecount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GrpcOpenHttpLogSel) Reset()         { *m = GrpcOpenHttpLogSel{} }
func (m *GrpcOpenHttpLogSel) String() string { return proto.CompactTextString(m) }
func (*GrpcOpenHttpLogSel) ProtoMessage()    {}
func (*GrpcOpenHttpLogSel) Descriptor() ([]byte, []int) {
	return fileDescriptor_27580e2d3c25b33d, []int{2}
}

func (m *GrpcOpenHttpLogSel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcOpenHttpLogSel.Unmarshal(m, b)
}
func (m *GrpcOpenHttpLogSel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcOpenHttpLogSel.Marshal(b, m, deterministic)
}
func (m *GrpcOpenHttpLogSel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcOpenHttpLogSel.Merge(m, src)
}
func (m *GrpcOpenHttpLogSel) XXX_Size() int {
	return xxx_messageInfo_GrpcOpenHttpLogSel.Size(m)
}
func (m *GrpcOpenHttpLogSel) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcOpenHttpLogSel.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcOpenHttpLogSel proto.InternalMessageInfo

func (m *GrpcOpenHttpLogSel) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *GrpcOpenHttpLogSel) GetPartnerID() string {
	if m != nil {
		return m.PartnerID
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetInterfaceName() string {
	if m != nil {
		return m.InterfaceName
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetOperationTime() *timestamp.Timestamp {
	if m != nil {
		return m.OperationTime
	}
	return nil
}

func (m *GrpcOpenHttpLogSel) GetActionTypes() string {
	if m != nil {
		return m.ActionTypes
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetActionGuid() string {
	if m != nil {
		return m.ActionGuid
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetPushUrl() string {
	if m != nil {
		return m.PushUrl
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetOnlyCode() string {
	if m != nil {
		return m.OnlyCode
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetBodyText() string {
	if m != nil {
		return m.BodyText
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetMillisecond() *GrpcDecimal {
	if m != nil {
		return m.Millisecond
	}
	return nil
}

func (m *GrpcOpenHttpLogSel) GetComputerName() string {
	if m != nil {
		return m.ComputerName
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetFromIP() string {
	if m != nil {
		return m.FromIP
	}
	return ""
}

func (m *GrpcOpenHttpLogSel) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GrpcOpenHttpLogSel) GetPagecount() int32 {
	if m != nil {
		return m.Pagecount
	}
	return 0
}

type GrpcOpenHttpLogPage struct {
	Total                int32                    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Rows                 []*GrpcOpenHttpLogObject `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *GrpcOpenHttpLogPage) Reset()         { *m = GrpcOpenHttpLogPage{} }
func (m *GrpcOpenHttpLogPage) String() string { return proto.CompactTextString(m) }
func (*GrpcOpenHttpLogPage) ProtoMessage()    {}
func (*GrpcOpenHttpLogPage) Descriptor() ([]byte, []int) {
	return fileDescriptor_27580e2d3c25b33d, []int{3}
}

func (m *GrpcOpenHttpLogPage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GrpcOpenHttpLogPage.Unmarshal(m, b)
}
func (m *GrpcOpenHttpLogPage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GrpcOpenHttpLogPage.Marshal(b, m, deterministic)
}
func (m *GrpcOpenHttpLogPage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GrpcOpenHttpLogPage.Merge(m, src)
}
func (m *GrpcOpenHttpLogPage) XXX_Size() int {
	return xxx_messageInfo_GrpcOpenHttpLogPage.Size(m)
}
func (m *GrpcOpenHttpLogPage) XXX_DiscardUnknown() {
	xxx_messageInfo_GrpcOpenHttpLogPage.DiscardUnknown(m)
}

var xxx_messageInfo_GrpcOpenHttpLogPage proto.InternalMessageInfo

func (m *GrpcOpenHttpLogPage) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GrpcOpenHttpLogPage) GetRows() []*GrpcOpenHttpLogObject {
	if m != nil {
		return m.Rows
	}
	return nil
}

func init() {
	proto.RegisterType((*GrpcDecimal)(nil), "GrpcOpenHttpLogPkg.GrpcDecimal")
	proto.RegisterType((*GrpcOpenHttpLogObject)(nil), "GrpcOpenHttpLogPkg.GrpcOpenHttpLogObject")
	proto.RegisterType((*GrpcOpenHttpLogSel)(nil), "GrpcOpenHttpLogPkg.GrpcOpenHttpLogSel")
	proto.RegisterType((*GrpcOpenHttpLogPage)(nil), "GrpcOpenHttpLogPkg.GrpcOpenHttpLogPage")
}

func init() { proto.RegisterFile("openhttplog.proto", fileDescriptor_27580e2d3c25b33d) }

var fileDescriptor_27580e2d3c25b33d = []byte{
	// 508 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x55, 0x9e, 0x6d, 0xae, 0x9b, 0xa6, 0x0c, 0x05, 0x8d, 0x22, 0x04, 0x51, 0x84, 0xc0, 0x6c,
	0xbc, 0x08, 0x2b, 0x16, 0x48, 0xb4, 0x0d, 0x14, 0x4b, 0x94, 0x18, 0x27, 0x7c, 0x80, 0xe3, 0xdc,
	0xba, 0x2e, 0xe3, 0x99, 0xd1, 0x78, 0x0c, 0x44, 0xe2, 0x6f, 0xd8, 0xf1, 0x7d, 0x7c, 0x00, 0x9a,
	0x71, 0x42, 0x9d, 0x44, 0x48, 0x5d, 0xa3, 0xae, 0xec, 0x73, 0xce, 0x7d, 0xcc, 0x7d, 0xe8, 0xc2,
	0x3d, 0x21, 0x91, 0x5f, 0x69, 0x2d, 0x99, 0x48, 0x3c, 0xa9, 0x84, 0x16, 0x84, 0x9c, 0x2b, 0x19,
	0x4f, 0x24, 0xf2, 0xf7, 0x5a, 0xcb, 0x0f, 0x22, 0x09, 0xbe, 0x24, 0xfd, 0x9e, 0x4e, 0x33, 0xcc,
	0x75, 0x94, 0xc9, 0xd2, 0x68, 0xf8, 0x0a, 0x1c, 0x63, 0x36, 0xc6, 0x38, 0xcd, 0x22, 0x46, 0x8e,
	0xa1, 0x55, 0xf0, 0x54, 0xe7, 0xb4, 0x36, 0xa8, 0xb9, 0x8d, 0xb0, 0x04, 0x86, 0xe5, 0x11, 0x17,
	0x39, 0xad, 0x0f, 0x6a, 0x6e, 0x2f, 0x2c, 0xc1, 0xf0, 0x77, 0x03, 0x1e, 0x6c, 0xa5, 0x98, 0xcc,
	0xaf, 0x31, 0xd6, 0xe4, 0x10, 0xea, 0xfe, 0x78, 0x15, 0xa2, 0xee, 0x8f, 0xc9, 0x23, 0xe8, 0x04,
	0x91, 0xd2, 0x1c, 0x95, 0x3f, 0xb6, 0x31, 0x3a, 0xe1, 0x0d, 0x41, 0x9e, 0x42, 0xd7, 0xe7, 0x1a,
	0xd5, 0x65, 0x14, 0xe3, 0xc7, 0x28, 0x43, 0xda, 0xb0, 0x16, 0x9b, 0x24, 0x79, 0x03, 0xdd, 0x89,
	0x44, 0x15, 0xe9, 0x54, 0xf0, 0x59, 0x9a, 0x21, 0x6d, 0x0e, 0x6a, 0xae, 0x33, 0xea, 0x7b, 0x89,
	0x10, 0x09, 0xc3, 0xb2, 0x9c, 0x79, 0x71, 0xe9, 0xcd, 0xd6, 0x15, 0x86, 0x9b, 0x0e, 0x64, 0x00,
	0xce, 0x49, 0x6c, 0xd1, 0x52, 0x62, 0x4e, 0x5b, 0x36, 0x4b, 0x95, 0x22, 0x8f, 0x01, 0x4a, 0x78,
	0x5e, 0xa4, 0x0b, 0xda, 0xb6, 0x06, 0x15, 0x86, 0x50, 0xd8, 0x0b, 0x8a, 0xfc, 0xea, 0xb3, 0x62,
	0x74, 0xcf, 0x8a, 0x6b, 0x48, 0xfa, 0xb0, 0x3f, 0xe1, 0x6c, 0x79, 0x26, 0x16, 0x48, 0xf7, 0xad,
	0xf4, 0x17, 0x1b, 0xed, 0x54, 0x2c, 0x96, 0x33, 0xfc, 0xae, 0x69, 0xa7, 0xd4, 0xd6, 0x98, 0x0c,
	0xe1, 0xe0, 0xad, 0x52, 0x42, 0x5d, 0x60, 0x9e, 0x47, 0x09, 0x52, 0xb0, 0xfa, 0x06, 0x67, 0xbb,
	0x19, 0x50, 0xc7, 0x2a, 0x75, 0x3f, 0x20, 0x27, 0xe0, 0x5c, 0xa4, 0x8c, 0xa5, 0x39, 0xc6, 0x82,
	0x2f, 0xe8, 0x81, 0xed, 0xc3, 0x13, 0x6f, 0x77, 0xda, 0x5e, 0x65, 0xb2, 0x61, 0xd5, 0xc7, 0xa4,
	0x3d, 0x13, 0x99, 0x2c, 0x34, 0x2a, 0xdb, 0xf1, 0x6e, 0x99, 0xb6, 0xca, 0x91, 0x87, 0xd0, 0x7e,
	0xa7, 0x44, 0xe6, 0x07, 0xf4, 0xd0, 0xaa, 0x2b, 0x34, 0xfc, 0xd9, 0x84, 0xed, 0xcd, 0x9a, 0x22,
	0xbb, 0x9b, 0xf9, 0x7f, 0x3c, 0x73, 0x42, 0xa0, 0x29, 0xcd, 0x53, 0x7b, 0x83, 0x9a, 0xdb, 0x0a,
	0xed, 0xbf, 0x19, 0xb0, 0xf9, 0xc6, 0xa2, 0xe0, 0x9a, 0x1e, 0x59, 0xe1, 0x86, 0x18, 0x5e, 0xc3,
	0xfd, 0xed, 0xc7, 0x19, 0xa7, 0x63, 0x68, 0x69, 0xa1, 0x23, 0x66, 0x17, 0xa5, 0x15, 0x96, 0x80,
	0xbc, 0x86, 0xa6, 0x12, 0xdf, 0xcc, 0x79, 0x69, 0xb8, 0xce, 0xe8, 0xc5, 0xbf, 0xca, 0xda, 0x39,
	0x34, 0xa1, 0x75, 0x1b, 0xfd, 0xd8, 0xb9, 0x43, 0x53, 0x54, 0x5f, 0x51, 0x91, 0x18, 0x8e, 0x3e,
	0x15, 0xa8, 0x96, 0x15, 0x85, 0x3c, 0xbb, 0x45, 0xf4, 0x29, 0xb2, 0xfe, 0xf3, 0x5b, 0xd8, 0x99,
	0x92, 0x4e, 0xbb, 0xbf, 0xea, 0xb0, 0x4a, 0x99, 0xc6, 0x38, 0x6f, 0xdb, 0xa5, 0x7c, 0xf9, 0x27,
	0x00, 0x00, 0xff, 0xff, 0x52, 0x2d, 0xa8, 0x9d, 0x91, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcOpenHttpLogServerClient is the client API for GrpcOpenHttpLogServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcOpenHttpLogServerClient interface {
	QueryOpenHttpLog(ctx context.Context, in *GrpcOpenHttpLogSel, opts ...grpc.CallOption) (*GrpcOpenHttpLogPage, error)
}

type grpcOpenHttpLogServerClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcOpenHttpLogServerClient(cc grpc.ClientConnInterface) GrpcOpenHttpLogServerClient {
	return &grpcOpenHttpLogServerClient{cc}
}

func (c *grpcOpenHttpLogServerClient) QueryOpenHttpLog(ctx context.Context, in *GrpcOpenHttpLogSel, opts ...grpc.CallOption) (*GrpcOpenHttpLogPage, error) {
	out := new(GrpcOpenHttpLogPage)
	err := c.cc.Invoke(ctx, "/GrpcOpenHttpLogPkg.GrpcOpenHttpLogServer/QueryOpenHttpLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcOpenHttpLogServerServer is the server API for GrpcOpenHttpLogServer service.
type GrpcOpenHttpLogServerServer interface {
	QueryOpenHttpLog(context.Context, *GrpcOpenHttpLogSel) (*GrpcOpenHttpLogPage, error)
}

// UnimplementedGrpcOpenHttpLogServerServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcOpenHttpLogServerServer struct {
}

func (*UnimplementedGrpcOpenHttpLogServerServer) QueryOpenHttpLog(ctx context.Context, req *GrpcOpenHttpLogSel) (*GrpcOpenHttpLogPage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryOpenHttpLog not implemented")
}

func RegisterGrpcOpenHttpLogServerServer(s *grpc.Server, srv GrpcOpenHttpLogServerServer) {
	s.RegisterService(&_GrpcOpenHttpLogServer_serviceDesc, srv)
}

func _GrpcOpenHttpLogServer_QueryOpenHttpLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GrpcOpenHttpLogSel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcOpenHttpLogServerServer).QueryOpenHttpLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GrpcOpenHttpLogPkg.GrpcOpenHttpLogServer/QueryOpenHttpLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcOpenHttpLogServerServer).QueryOpenHttpLog(ctx, req.(*GrpcOpenHttpLogSel))
	}
	return interceptor(ctx, in, info, handler)
}

var _GrpcOpenHttpLogServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GrpcOpenHttpLogPkg.GrpcOpenHttpLogServer",
	HandlerType: (*GrpcOpenHttpLogServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryOpenHttpLog",
			Handler:    _GrpcOpenHttpLogServer_QueryOpenHttpLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "openhttplog.proto",
}
